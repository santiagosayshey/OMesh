version: "3.8"
services:
  server1:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: olaf_server1
    ports:
      - "8765:8765" # WebSocket port for clients
      - "8766:8766" # WebSocket port for servers
      - "8081:8081" # HTTP port for file transfers
    volumes:
      - clients1:/app/server/clients
      - files1:/app/server/files
      - config1:/app/server/config
      - neighbours:/app/server/neighbours
    environment:
      - SERVER_ADDRESS=server1
      - SERVER_PORT=8765
      - SERVER_SERVER_PORT=8766
      - HTTP_PORT=8081
      - NEIGHBOUR_ADDRESSES=server2:8766,server3:8766
      - LOG_MESSAGES=True
      - PUBLIC_HOST=localhost
    networks:
      - olaf_network

  server2:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: olaf_server2
    ports:
      - "8767:8765" # WebSocket port for clients
      - "8768:8766" # WebSocket port for servers
      - "8082:8081" # HTTP port for file transfers
    volumes:
      - clients2:/app/server/clients
      - files2:/app/server/files
      - config2:/app/server/config
      - neighbours:/app/server/neighbours
    environment:
      - SERVER_ADDRESS=server2
      - SERVER_PORT=8765
      - SERVER_SERVER_PORT=8766
      - HTTP_PORT=8081
      - NEIGHBOUR_ADDRESSES=server1:8766,server3:8766
      - LOG_MESSAGES=True
      - PUBLIC_HOST=localhost
    networks:
      - olaf_network

  server3:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    container_name: olaf_server3
    ports:
      - "8769:8765" # WebSocket port for clients
      - "8770:8766" # WebSocket port for servers
      - "8083:8081" # HTTP port for file transfers
    volumes:
      - clients3:/app/server/clients
      - files3:/app/server/files
      - config3:/app/server/config
      - neighbours:/app/server/neighbours
    environment:
      - SERVER_ADDRESS=server3
      - SERVER_PORT=8765
      - SERVER_SERVER_PORT=8766
      - HTTP_PORT=8081
      - NEIGHBOUR_ADDRESSES=server1:8766,server2:8766
      - LOG_MESSAGES=True
      - PUBLIC_HOST=localhost
    networks:
      - olaf_network

  client1:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: olaf_client1
    ports:
      - "5001:5000"
    volumes:
      - config_client1:/app/client/config
      - chat_data_client1:/app/client/chat_data
    environment:
      - SERVER_ADDRESS=server1
      - SERVER_PORT=8765
      - LOG_MESSAGES=True
      - CLIENT_NAME=Client1
      - MESSAGE_EXPIRY_TIME=-1
    networks:
      - olaf_network
    depends_on:
      - server1

  client2:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: olaf_client2
    ports:
      - "5002:5000"
    volumes:
      - config_client2:/app/client/config
      - chat_data_client2:/app/client/chat_data
    environment:
      - SERVER_ADDRESS=server1
      - SERVER_PORT=8765
      - LOG_MESSAGES=True
      - CLIENT_NAME=Client2
      - MESSAGE_EXPIRY_TIME=-1
    networks:
      - olaf_network
    depends_on:
      - server1

  client3:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: olaf_client3
    ports:
      - "5003:5000"
    volumes:
      - config_client3:/app/client/config
      - chat_data_client3:/app/client/chat_data
    environment:
      - SERVER_ADDRESS=server2
      - SERVER_PORT=8765
      - LOG_MESSAGES=True
      - CLIENT_NAME=Client3
      - MESSAGE_EXPIRY_TIME=-1
    networks:
      - olaf_network
    depends_on:
      - server2

  client4:
    build:
      context: .
      dockerfile: ./client/Dockerfile
    container_name: olaf_client4
    ports:
      - "5004:5000"
    volumes:
      - config_client4:/app/client/config
      - chat_data_client4:/app/client/chat_data
    environment:
      - SERVER_ADDRESS=server3
      - SERVER_PORT=8765
      - LOG_MESSAGES=True
      - CLIENT_NAME=Client4
      - MESSAGE_EXPIRY_TIME=-1
    networks:
      - olaf_network
    depends_on:
      - server3

volumes:
  # Server volumes
  clients1:
  clients2:
  clients3:
  files1:
  files2:
  files3:
  config1:
  config2:
  config3:
  neighbours:
  # Client volumes
  config_client1:
  config_client2:
  config_client3:
  config_client4:
  chat_data_client1:
  chat_data_client2:
  chat_data_client3:
  chat_data_client4:

networks:
  olaf_network:
    driver: bridge
